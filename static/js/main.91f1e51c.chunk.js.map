{"version":3,"sources":["imagenes/logo2.png","firebase.js","components/Kitchen.js","components/Home.js","components/NameForm.js","components/Food.js","components/BreakfastFirebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Kitchen","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","orders","_this2","console","log","database","ref","child","on","s","ordersForArray","snapshot","forEach","order","items","val","key","push","snapshotToArray","setState","react_default","a","createElement","className","react_router_dom","to","map","index","item","name","Component","Home","src","logo","alt","style","width","height","NameForm","value","handleChange","bind","assertThisInitialized","handleSubmit","event","target","preventDefault","addName","onSubmit","variant","onChange","type","Food","sendOrder","comands","updates","update","removeRow","splice","div","total","submit","sumItem","price","concat","toConsumableArray","componentOrders","ordersNew","newState","id","image","products","el","reduce","sum","result","_this3","textDecoration","components_NameForm","postDetail","margin","onClick","comand","BreakfastFirebase","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDom","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91f1e51c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.c7987921.png\";","import * as firebase from 'firebase';\n\n\n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n      apiKey: \"AIzaSyAnXHhFrG9kh8v_vSHf1U6Cr4M5NoORW8s\",\n      authDomain: \"mi-proyecto-fabuloso-23cca.firebaseapp.com\",\n      databaseURL: \"https://mi-proyecto-fabuloso-23cca.firebaseio.com\",\n      projectId: \"mi-proyecto-fabuloso-23cca\",\n      storageBucket: \"mi-proyecto-fabuloso-23cca.appspot.com\",\n      messagingSenderId: \"102580805316\",\n      appId: \"1:102580805316:web:81284ffc36c50cc4\"\n    };\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, {Component} from 'react';\nimport {Link}from 'react-router-dom';\nimport '../css/links.css';\n//import logo from '../imagenes/logo3.png';\nimport firebase from '../firebase';\n\nclass Kitchen extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      orders:[]\n\n    };\n\n  };\n  componentDidMount() {\n    console.log('el componente se agregó al DOM')\n    function snapshotToArray(snapshot){\n            let orders = []\n\n            snapshot.forEach(order => {\n                const items = order.val();\n                items.key = order.key;\n\n                orders.push(items)\n            });\n            return orders\n        }\n        const dbFoodOrdersRef = firebase.database().ref();\n        const foodOrdersRef = dbFoodOrdersRef.child('ComandBreakfast/');\n        foodOrdersRef.on(\"value\", s=>{\n            const ordersForArray = snapshotToArray(s);\n            this.setState({\n                orders: ordersForArray\n            })\n        })\n\n  }\n\n\nrender(){\n  console.log(this.state.orders);\n return(\n\n<div>\n          <button className = 'but'><Link to=\"/\" className = 'buttons' >Salir.</Link></button>\n\n      <div>\n      {this.state.orders.map((order, index) =>{\n        return(\n                   <div key={index}>\n                       <h5 >Orden #{index+1}</h5>\n                       <div >\n                           {order.map((item, index)=>\n                           <div key={index}>\n                               <p>{item.name}</p>\n                           </div>\n                           )}\n\n                      </div>\n                  </div>\n)})}\n\n      </div>\n</div>\n\n)}\n\n}\n\n\nexport default Kitchen;\n","import React, {Component} from 'react';\nimport {Link}from 'react-router-dom';\nimport '../css/links.css';\nimport logo from '../imagenes/logo2.png';\n\nclass Home extends Component {\n\n\n  render(){\n    return(\n\n        <div>\n            <div>\n            <img src={logo} alt=\"Logo\" style={{ width:'103%', height:'100%'}}/>\n            </div>\n              <div className = 'buttonsInicio'>\n\n                  <Link to=\"kitchen\" className = 'buttons' >Cocina.</Link>\n\n\n                  <Link to=\"breakfastFirebase\" className = 'buttons'>Pedidos.</Link>\n\n              </div>\n        </div>\n          )\n\n          }\n\n}\n\nexport default Home;\n","import React, {Component} from 'react';\n  import '../css/nameForm.css';\n\n\nclass NameForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Perla'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event, value) {\n    //console.log(event,value);\n    //console.log(this.state.value);\n    //console.log('props', this.props.addName);\n    event.preventDefault();\n    this.props.addName(this.state.value);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className = 'butt'>\n          Mesero que atendio:\n          <select className=\"orderSelect\" variant=\"warning\" value={this.state.value} onChange={this.handleChange}>\n            <option value=\"Perla\">Perla</option>\n            <option value=\"Gerardo\">Gerardo</option>\n            <option value=\"Sandra\">Sandra</option>\n            <option value=\"Luis\">Luis</option>\n          </select>\n        </label>\n        <input className=\"sumit\" type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\nexport default NameForm;\n","import React, {Component} from 'react';\nimport {Link}from 'react-router-dom';\n//import ComandBreakfast from './BreakfastOrder';\n//import ComandBreakfast from './ComandBreakfast';\nimport NameForm from './NameForm';\nimport firebase from '../firebase';\nimport '../css/breacfast.css';\nimport '../css/links.css';\nimport '../css/nameForm.css';\n//import logo from '../imagenes/logo.png';\n\n\n\nclass Food extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      orders:[],\n      comands:[],\n      value:'',\n      total:0\n\n    };\n\n    this.submit = this.submit.bind(this);\n    this.addName = this.addName.bind(this);\n    this.sumItem = this.sumItem.bind(this);\n    this.sendOrder = this.sendOrder.bind(this)\n\n  };\n\n  addName(value){\n    this.setState({\n      value\n    });\n\n  }\n\n  submit(name, price){\n    const order = {\n      name: name,\n      price: price\n    }\n\n    this.setState({\n      comands:[...this.state.comands,order]\n\n    })\n  }\n\n\n\n  componentDidMount() {\n    console.log('el componente se agregó al DOM')\n    this.componentOrders();\n  }\n\n  componentOrders(){\n    const ordersRef=firebase.database().ref().child('food');\n\n    ordersRef.on('value',(snapshot)=>{\n      let ordersNew = snapshot.val();\n      let newState=[];\n      for(let order in ordersNew){\n\n        newState.push({\n          id: order,\n          image:ordersNew[order].image,\n          name: ordersNew[order].name,\n          price: ordersNew[order].price\n\n        });\n        console.log(newState);\n        }\n\n      this.setState({\n\n        orders: newState,\n\n      });\n\n    });\n\n  }\n\n  sendOrder= ()=>{\n      let order = this.state.comands;\n      const foodOrder =  firebase.database().ref('ComandBreakfast/').child('order').push().key;\n      let updates = {};\n      updates['ComandBreakfast/' + foodOrder] = order;\n      console.log('updates', updates);\n      return firebase.database().ref().update(updates);\n\n\n  }\n\n  sumItem () {\n      const price = this.state.comands.map((el) => el.price)\n      const products = price.reduce((sum, result) => {\n          return +sum + +result;\n      });\n\n      this.setState({\n          total: products\n      })\n\n  }\n\n\n  removeRow = (event, index) => {\n        event.preventDefault();\n        this.state.comands.splice(index, 1);\n        this.setState({div:this.state.comands});\n    }\n\n\n\n  render(){\n    console.log(this.state.comands);\n    return (\n      <div>\n      <div>\n      <div>\n      <button className = 'but'><Link to=\"/BreakfastFirebase\" className = 'buttons' style={{ textDecoration: 'none'}}>Desayuno.</Link></button>\n      <button className = 'but'><Link to=\"/\" className = 'buttons' style={{ textDecoration: 'none'}}>Salir.</Link></button>\n      </div>\n      <div>\n      <NameForm  addName={this.addName} />\n      </div>\n      <div>\n      <span className='cont'>\n      {this.state.orders.map((postDetail)=>{\n        return(\n          <div className='card' style={{margin:'1%'}} key={postDetail.name}>\n          <div>\n              <img src={postDetail.image} alt=\"\"/>\n          </div>\n          <span className=\"container\">\n          <h3>{postDetail.name}</h3>\n          <p>{postDetail.price}</p>\n          <button className=\"sumit\" onClick={()=>{\n            this.submit(postDetail.name, postDetail.price);\n          }} type=\"submit\" >Agregar</button>\n          </span>\n          </div>\n        )\n      })}\n\n      </span>\n\n      </div>\n\n      <div>\n              <div className=\"butt\"><h5>Mesero: <span >{this.state.value}</span></h5></div>\n      </div>\n      <div>\n            <div>\n              {this.state.comands.map((comand, index) => {\n                return(\n                <div  className=\"contenedorOrder\" key={index}>\n                <h3  className=\"order\">{comand.name}</h3>\n                <p className=\"order\">{comand.price}</p>\n                <button className=\"sumit\" onClick={(event) => this.removeRow(event, index)}>eliminar</button>\n\n              </div>\n              )}\n            )\n              }\n            </div>\n      </div>\n          <div>\n          <button className=\"sumit\" onClick={this.sumItem}>Total: $ {this.state.total}</button>\n          </div>\n\n\n      </div>\n      <div><button  type=\"button\" className=\"sumit\"\n       onClick={this.sendOrder}>\n           Enviar a Cocina\n      </button></div>\n      </div>\n\n\n    )\n\n\n  };\n}\nexport default Food;\n","  import React, {Component} from 'react';\n  import {Link}from 'react-router-dom';\n  import NameForm from './NameForm';\n  import firebase from '../firebase';\n  import '../css/breacfast.css';\n  import '../css/links.css';\n  import '../css/nameForm.css';\n  //import FirebaseOrder from './FirebaseOrder';\n\n\n  class BreakfastFirebase extends Component {\n    constructor(props) {\n      super(props);\n      this.state={\n        orders:[],\n        comands:[],\n        value:'',\n        total:0\n\n      };\n\n      this.submit = this.submit.bind(this);\n      this.addName = this.addName.bind(this);\n      this.sumItem = this.sumItem.bind(this);\n      this.sendOrder = this.sendOrder.bind(this)\n\n    };\n\n    addName(value){\n      this.setState({\n        value\n      });\n\n    }\n\n    submit(name, price){\n      const order = {\n        name: name,\n        price: price\n      }\n\n      this.setState({\n        comands:[...this.state.comands,order]\n\n      })\n    }\n\n\n\n\n\n    componentDidMount() {\n      //console.log('el componente se agregó al DOM')\n      this.componentOrders();\n      //this.sendOrder();\n    }\n\n    componentOrders(){\n      const ordersRef=firebase.database().ref().child('breakfast');\n\n      ordersRef.on('value',(snapshot)=>{\n        let ordersNew = snapshot.val();\n        let newState=[];\n        for(let order in ordersNew){\n\n          newState.push({\n            id: order,\n            image:ordersNew[order].image,\n            name: ordersNew[order].name,\n            price: ordersNew[order].price\n\n          });\n          }\n\n        this.setState({\n\n          orders: newState,\n\n        });\n\n      });\n\n    }\n\n\n    sendOrder= ()=>{\n        let order = this.state.comands;\n        const foodOrder =  firebase.database().ref('ComandBreakfast/').child('order').push().key;\n        let updates = {};\n        updates['ComandBreakfast/' + foodOrder] = order;\n        console.log('updates', updates);\n        return firebase.database().ref().update(updates);\n\n\n    }\n\n\n    sumItem () {\n        const price = this.state.comands.map((el) => el.price)\n        const products = price.reduce((sum, result) => {\n            return +sum + +result;\n        });\n\n        this.setState({\n            total: products\n        })\n\n    }\n\n\n    removeRow = (event, index) => {\n          event.preventDefault();\n          this.state.comands.splice(index, 1);\n          this.setState({div:this.state.comands});\n      }\n\n\n\n    render(){\n      console.log(this.state.comands);\n\n      return (\n        <div>\n        <div>\n        <div >\n        <button className = 'but'><Link to=\"/food\" className = 'buttons' >Comida.</Link></button>\n        <button className = 'but'><Link to=\"/\" className = 'buttons' >Salir.</Link></button>\n        </div>\n        <div>\n        <NameForm  addName={this.addName} />\n        </div>\n        <div>\n        <span className='cont'>\n        {this.state.orders.map((postDetail)=>{\n          return(\n            <div className='card' style={{margin:'1%'}} key={postDetail.name}>\n            <div>\n                <img src={postDetail.image} alt=\"\"/>\n            </div>\n            <span className=\"container\">\n            <h3>{postDetail.name}</h3>\n            <p>{postDetail.price}</p>\n            <button className=\"sumit\" onClick={()=>{\n              this.submit(postDetail.name, postDetail.price);\n            }} type=\"submit\" >Agregar</button>\n            </span>\n            </div>\n          )\n        })}\n\n        </span>\n\n        </div>\n\n        <div>\n                <div className=\"butt\"><h5>Mesero: <span >{this.state.value}</span></h5></div>\n        </div>\n        <div>\n              <div>\n                {this.state.comands.map((comand, index) => {\n                  return(\n                  <div  className=\"contenedorOrder\" key={index}>\n                  <h3  className=\"order\">{comand.name}</h3>\n                  <p className=\"order\">{comand.price}</p>\n                  <button className=\"sumit\" onClick={(event) => this.removeRow(event, index)}>eliminar</button>\n\n                </div>\n                )}\n              )\n                }\n              </div>\n        </div>\n            <div>\n            <button className=\"sumit\" onClick={this.sumItem}>Total:{this.state.total}</button>\n            </div>\n\n\n        </div>\n        <div><button  type=\"button\" className=\"sumit\"\n         onClick={this.sendOrder}>\n             Enviar a Cocina\n        </button></div>\n        </div>\n\n\n      )\n\n    };\n  }\n  export default BreakfastFirebase;\n","import React, {Component} from 'react';\nimport './App.css';\n//import PropTypes from 'prop-types';\n//import Content from './Content';\nimport {HashRouter, Route} from 'react-router-dom';\n//import './css/home.css';\n//import {BrowserRouter, Route, Switch} from 'react-router-dom';\n\n\nimport Kitchen from './components/Kitchen';\nimport Home from './components/Home';\nimport Food from './components/Food';\nimport BreakfastFirebase from './components/BreakfastFirebase';\n\n\n\nclass App extends Component {\n  render(){\n    return(\n  <HashRouter>\n\n      <Route exact path=\"/\" component={Home}/>\n      <Route path=\"/breakfastFirebase\" component={BreakfastFirebase}/>\n      <Route path=\"/food\" component={Food}/>\n      <Route path=\"/kitchen\" component={Kitchen}/>\n\n    </HashRouter>\n  );\n  }\n\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\n//import{BrowserRouter as Router} from 'react-router-dom';\n//import * as firebase from 'firebase';\n\n\nimport './index.css';\nimport App from './App';\n\n//import AppRouters from './routers';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDom.render(\n<App/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}